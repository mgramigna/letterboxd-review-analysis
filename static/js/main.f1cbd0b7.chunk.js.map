{"version":3,"sources":["components/MovieReview.tsx","types/index.ts","App.tsx","reportWebVitals.ts","index.tsx","../node_modules/sentiment/languages sync /^/.//.*//index$"],"names":["DiaryEntryType","PositiveWord","styled","span","NegativeWord","MovieReview","reviewSentiment","theme","useTheme","isExtraSmallScreen","useMediaQuery","breakpoints","down","isSmallScreen","isMediumScreen","key","review","movie","published","entry","renderSentiment","s","decimalPrecision","toFixed","Grid","container","direction","justify","item","xs","src","film","image","small","medium","large","Typography","variant","sentiment","score","comparative","split","map","word","i","strippedWord","replace","toLowerCase","negative","includes","positive","renderWord","App","useState","username","setUsername","overallSentiment","setOverallSentiment","individualSentiments","setIndividualSentiments","error","setError","loading","setLoading","wordCloud","setWordCloud","handleButtonClick","a","fetch","res","ok","json","msg","diaryJSON","filteredDiary","filter","d","type","DIARY","reviews","title","date","overallText","r","join","filteredOverallText","removeCommonWords","w","console","log","wordCountObj","countWords","words","Object","entries","count","text","value","Sentiment","overall","analyze","indivSentiments","length","message","common","forEach","obj","indexOf","splice","alignItems","TextField","onChange","event","target","label","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","onClick","Search","options","fontSizes","CircularProgress","is","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.f1cbd0b7.chunk.js","sourcesContent":["import { Grid, Typography, useMediaQuery, useTheme } from '@material-ui/core';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { ReviewSentiment } from '../types';\n\nconst PositiveWord = styled.span`\n  color: green;\n`;\n\nconst NegativeWord = styled.span`\n  color: red;\n`;\n\ninterface Props {\n  reviewSentiment: ReviewSentiment;\n}\n\nconst MovieReview = ({ reviewSentiment }: Props) => {\n  const theme = useTheme();\n  const isExtraSmallScreen = useMediaQuery(theme.breakpoints.down('xs'));\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  const isMediumScreen = useMediaQuery(theme.breakpoints.down('md'));\n\n  const key = `${reviewSentiment.review.movie}-${reviewSentiment.review.published}`;\n  const { entry } = reviewSentiment.review;\n\n  const renderWord = (reviewSentiment: ReviewSentiment, word: string, key: string) => {\n    const strippedWord = word\n      .replace(/[.,/#!$%^&*;:{}=\\-_`~()]/g, '')\n      .replace(/\\s/g, '')\n      .toLowerCase();\n\n    if (reviewSentiment.sentiment.negative.includes(strippedWord)) {\n      return <NegativeWord key={`${key}-${word}`}>{word + ' '}</NegativeWord>;\n    } else if (reviewSentiment.sentiment.positive.includes(strippedWord)) {\n      return <PositiveWord key={`${key}-${word}`}>{word + ' '}</PositiveWord>;\n    } else {\n      return word + ' ';\n    }\n  };\n\n  const getPosterImage = () => {\n    if (isExtraSmallScreen || isSmallScreen) {\n      return entry.film.image.small;\n    } else if (isMediumScreen) {\n      return entry.film.image.medium;\n    } else {\n      return entry.film.image.large;\n    }\n  };\n\n  const renderSentiment = (s: number, decimalPrecision?: number) => {\n    if (s > 0.0) {\n      return <PositiveWord>{decimalPrecision ? s.toFixed(decimalPrecision) : s}</PositiveWord>;\n    } else if (s < 0.0) {\n      return <NegativeWord>{decimalPrecision ? s.toFixed(decimalPrecision) : s}</NegativeWord>;\n    } else {\n      return s;\n    }\n  };\n\n  return (\n    <Grid container direction=\"row\" justify=\"flex-start\">\n      <Grid item xs>\n        <div>\n          <img src={getPosterImage()} />\n        </div>\n      </Grid>\n      <Grid item xs={10}>\n        <Typography variant=\"h6\">{reviewSentiment.review.movie}</Typography>\n        <Typography variant=\"subtitle1\">\n          Overall: {renderSentiment(reviewSentiment.sentiment.score)} Comparative:{' '}\n          {renderSentiment(reviewSentiment.sentiment.comparative, 2)}\n        </Typography>\n        <p>\n          {reviewSentiment.review.review.split(' ').map((word, i) => renderWord(reviewSentiment, word, `${i}-${key}`))}\n        </p>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default MovieReview;\n","import Sentiment from 'sentiment';\n\nexport interface DiaryEntry {\n  date: {\n    published: number;\n    watched: number;\n  };\n  film: {\n    image: {\n      large?: string;\n      medium?: string;\n      small?: string;\n      tiny?: string;\n    };\n    title: string;\n    year: string;\n  };\n  isRewatch: boolean;\n  rating: {\n    score: number;\n    text: string;\n  };\n  review?: string;\n  spoilers: boolean;\n  type: string;\n  uri: string;\n}\n\nexport enum DiaryEntryType {\n  DIARY = 'diary',\n  LIST = 'list'\n}\n\nexport interface Review {\n  entry: DiaryEntry;\n  movie: string;\n  review: string;\n  published: number;\n}\n\nexport interface ReviewSentiment {\n  review: Review;\n  sentiment: Sentiment.AnalysisResult;\n}\n","import { CircularProgress, Grid, IconButton, InputAdornment, TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport Sentiment from 'sentiment';\nimport { Search } from '@material-ui/icons';\nimport ReactWordcloud, { Word } from 'react-wordcloud';\nimport countWords from 'count-words';\nimport common from 'common-words';\nimport MovieReview from './components/MovieReview';\nimport { DiaryEntry, DiaryEntryType, Review, ReviewSentiment } from './types';\n\nfunction App() {\n  const [username, setUsername] = useState<string>('');\n  const [overallSentiment, setOverallSentiment] = useState<Sentiment.AnalysisResult | null>(null);\n  const [individualSentiments, setIndividualSentiments] = useState<ReviewSentiment[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [wordCloud, setWordCloud] = useState<Word[]>([]);\n\n  const handleTextChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setUsername(event.target.value);\n  };\n\n  const clear = () => {\n    setOverallSentiment(null);\n    setIndividualSentiments([]);\n    setError(null);\n    setLoading(false);\n  };\n\n  const handleButtonClick = async () => {\n    clear();\n    setLoading(true);\n    try {\n      const res = await fetch(`https://letterboxd-rss-wrapper.herokuapp.com/rss?user=${username}`);\n      if (!res.ok) {\n        const msg: { error: string } = await res.json();\n        setError(msg.error);\n        setLoading(false);\n      } else {\n        const diaryJSON = (await res.json()) as DiaryEntry[];\n        const filteredDiary = diaryJSON.filter(d => d.type === DiaryEntryType.DIARY && d.review);\n\n        const reviews: Review[] = filteredDiary.map(d => ({\n          entry: d,\n          movie: d.film.title,\n          review: d.review?.replace('\\n', ' ') || '',\n          published: d.date.published\n        }));\n\n        const overallText = reviews.map(r => r.review).join(' ');\n        const filteredOverallText = removeCommonWords(overallText.split(' ')).map(w =>\n          w\n            .replace(/[.,/#!$%^&*;:{}=\\-_`~()]/g, '')\n            .replace(/\\s/g, '')\n            .toLowerCase()\n        );\n        console.log('filteredOverallText: ', filteredOverallText);\n\n        const wordCountObj = countWords(filteredOverallText.join(' '), true);\n        const words: Word[] = Object.entries(wordCountObj).map(([word, count]) => ({\n          text: word.toLowerCase(),\n          value: count\n        }));\n\n        const sentiment = new Sentiment();\n        const overall = sentiment.analyze(overallText);\n        const indivSentiments: ReviewSentiment[] = reviews.map(r => ({\n          review: r,\n          sentiment: sentiment.analyze(r.review)\n        }));\n\n        setOverallSentiment(overall);\n        setIndividualSentiments(indivSentiments);\n        setLoading(false);\n        setWordCloud(words.filter(w => w.text.length > 3));\n      }\n    } catch (e) {\n      setError(e.message);\n      setLoading(false);\n    }\n  };\n\n  const removeCommonWords = (words: string[]) => {\n    common.forEach(obj => {\n      const { word } = obj;\n      while (words.indexOf(word) !== -1) {\n        words.splice(words.indexOf(word), 1);\n      }\n    });\n    return words;\n  };\n\n  return (\n    <>\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Grid item xs>\n          <TextField\n            value={username}\n            onChange={handleTextChange}\n            label=\"Username\"\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton aria-label=\"search\" onClick={handleButtonClick}>\n                    <Search />\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n          />\n        </Grid>\n        {error && (\n          <Grid item xs>\n            Error: {error}\n          </Grid>\n        )}\n        {!loading && overallSentiment && (\n          <>\n            <Grid item xs>\n              Overall: {overallSentiment.score}\n            </Grid>\n            <Grid item xs>\n              Comparative: {overallSentiment.comparative}\n            </Grid>\n          </>\n        )}\n        {!loading && (\n          <ReactWordcloud\n            words={wordCloud}\n            options={{\n              fontSizes: [8, 64]\n            }}\n          />\n        )}\n        {loading && <CircularProgress />}\n      </Grid>\n      {!loading && (\n        <Grid container direction=\"column\" justify=\"center\">\n          {individualSentiments.map(is => {\n            const key = `${is.review.movie}-${is.review.published}`;\n            return (\n              <Grid item xs key={key}>\n                <MovieReview reviewSentiment={is} />\n              </Grid>\n            );\n          })}\n        </Grid>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","var map = {\n\t\"./en/index\": 52\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 96;"],"sourceRoot":""}